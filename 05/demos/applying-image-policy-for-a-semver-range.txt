This exercise assumes a working Kubernetes cluster, with Flux installed and
configured according to the lab exercise in modules 3, 4, and previous
exercises in this module 5.

The kubectl (https://kubernetes.io/docs/tasks/tools/install-kubectl/) command
line tool is required, as is an account on a git hosting provider, such as;
GitHub, GitLab, Bitbucket Server, AWS CodeCommit, or Azure DevOps. The lab uses
the Flux CLI, which can be installed according to the following instructions:
https://fluxcd.io/docs/installation/#install-the-flux-cli. Installation
instructions for the Kustomize utility can be found at the following location:
https://kubectl.docs.kubernetes.io/installation/kustomize/. 

The instructions in this lab exercise relate to GitHub as the git host
provider, so if you're using a different git host provider, amend the commands
to suit. Information concerning the 'yq' utility, can be found at the following
URL: https://mikefarah.gitbook.io/yq/.

Exercise: APPLYING IMAGE POLICY FOR A SEMVER RANGE
++++++++++++++++++++++++++++++++++++++++++++++++++

1.  Change directory into the root of the 'Flux' repo.

cd gitops-lab-flux

2.  Configure notifications for events generated by the image reflector
    controller related to image policy, by making an addition to the manifest
    in the notifications/alerts sub-directory (discord-bot-alert.yaml).
    Duplicate one of the event sources, and change its 'kind' to 'ImagePolicy'.

3.  Make a directory to store ImagePolicy resources.

mkdir ./imagepolicies

4.  Create a SemVer type ImagePolicy resource for the nginxhello app's image
    respository, to select image tags greater than or equal to the minor
    version '1.20.x'.

flux create image policy nginxhello \
  --image-ref=nginxhello \
  --select-semver='>=1.20.x' \
  --namespace=default \
  --export > imagepolicies/nginxhello-image-policy.yaml

5.  Inspect the geenerated YAML resource and make sure that it refelcts what
    you expect to see.

cat imagepolicies/nginxhello-image-policy.yaml

6.  Create a kustomization file for the 'imagepolicies' directory.

cd imagepolicies
kustomize create --autodetect
cd ..

7.  Stage and commit changes, before pushing the changes to the remote
    'gitops-lab-flux' repo.

git add -A
git commit -m "Add ImagePolicy resource for nginxhello app"
git push

8.  Give Flux enough time to fetch and apply the ImagePolicy resource, check in
    on the cluster to make sure the resource has been created in the default
    namespace. Check which image tag has been selected by the image reflector
    controller.

kubectl get imagepolicies.image.toolkit.fluxcd.io

9.  Is this image tag the same as the tag used by the current deployment of the
    nginxhello app in the cluster? Remind yourself of the current version.

kubectl get deployments.apps nginxhello -o yaml | \
  yq '.spec.template.spec.containers[0].image'
